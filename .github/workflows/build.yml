name: Steam Bot

on:
  push:
    branches:
      - master
env:
  AWS_DEFAULT_REGION: eu-central-1
  AWS_DEFAULT_OUTPUT: json
  AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  CLUSTER_NAME: ${{ secrets.CLUSTER_NAME }}
  CONTAINER_IMAGE: staging-ul
  STEAM_LOGIN: ${{ secrets.STEAM_LOGIN }}
  STEAM_PASSWORD: ${{ secrets.STEAM_PASSWORD }}
  TELEGRAM_TO: ${{ secrets.TELEGRAM_TO }}
  TELEGRAM_TOKEN: ${{ secrets.TELEGRAM_TOKEN }}
  RELEASE_NAME: ul-match-stats-bot

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          repository: uleague/universityleague-match-stats

      - uses: kciter/aws-ecr-action@v1
        with:
          access_key_id: ${{ env.AWS_ACCESS_KEY_ID }}
          secret_access_key: ${{ env.AWS_SECRET_ACCESS_KEY }}
          account_id: ${{ env.AWS_ACCOUNT_ID }}
          repo: ${{ env.CONTAINER_IMAGE }}
          region: eu-central-1
          tags: ${{ github.sha }}
  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout
        uses: actions/checkout@master

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ env.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ env.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-central-1
      - name: Setup kubectl
        uses: azure/setup-kubectl@v1
      - name: Generate kubectl config
        run: aws eks --region eu-central-1 update-kubeconfig --name ${{ env.CLUSTER_NAME }}
      - name: Install helm
        uses: azure/setup-helm@v1
      - name: Deploy with helm
        env:
          IMAGE_TAG: ${{ github.sha }}
          RELEASE_NAME: ${{ env.RELEASE_NAME }}
          CHART_NAME: chart-match-stats
          STEAM_LOGIN: ${{ env.STEAM_LOGIN }}
          STEAM_PASSWORD: ${{ env.STEAM_PASSWORD }}
          HELM_PARAMETERS_STAGING: "
            --set env[0].name=STEAM_LOGIN
            --set env[0].value=${{ env.STEAM_LOGIN }}
            --set env[1].name=STEAM_PASSWORD
            --set env[1].value=${{ env.STEAM_PASSWORD }}
          "
        # https://github.com/helm/helm/issues/6378#issuecomment-557746499
        run: |
          helm upgrade --namespace default --install --wait --timeout 100s \
            --set image.repository=$AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$CONTAINER_IMAGE \
            --set image.tag=$IMAGE_TAG $HELM_PARAMETERS_STAGING $RELEASE_NAME $CHART_NAME

  telegram:
    name: Telegram notification
    needs: deploy # set needs only last job except this job
    runs-on: ubuntu-latest
    if: always() # set always
    steps:
        # run this action to get workflow conclusion
        # You can get conclusion by env (env.WORKFLOW_CONCLUSION)
      - uses: technote-space/workflow-conclusion-action@v1
      - uses: appleboy/telegram-action@master
        with:
          to: ${{ env.TELEGRAM_TO }}
          token: ${{ env.TELEGRAM_TOKEN }}
          message: |
            The deployment of match stats bot finished with status ${{ env.WORKFLOW_CONCLUSION }}